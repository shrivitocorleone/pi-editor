{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n\nconst {\n  fromCallback\n} = require(\"universalify\");\nconst Store = require(\"./store\").Store;\nconst permuteDomain = require(\"./permuteDomain\").permuteDomain;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst {\n  getCustomInspectSymbol,\n  getUtilInspect\n} = require(\"./utilHelper\");\nclass MemoryCookieStore extends Store {\n  constructor() {\n    super();\n    this.synchronous = true;\n    this.idx = {};\n    const customInspectSymbol = getCustomInspectSymbol();\n    if (customInspectSymbol) {\n      this[customInspectSymbol] = this.inspect;\n    }\n  }\n  inspect() {\n    const util = {\n      inspect: getUtilInspect(inspectFallback)\n    };\n    return `{ idx: ${util.inspect(this.idx, false, 2)} }`;\n  }\n  findCookie(domain, path, key, cb) {\n    if (!this.idx[domain]) {\n      return cb(null, undefined);\n    }\n    if (!this.idx[domain][path]) {\n      return cb(null, undefined);\n    }\n    return cb(null, this.idx[domain][path][key] || null);\n  }\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    const results = [];\n    if (typeof allowSpecialUseDomain === \"function\") {\n      cb = allowSpecialUseDomain;\n      allowSpecialUseDomain = true;\n    }\n    if (!domain) {\n      return cb(null, []);\n    }\n    let pathMatcher;\n    if (!path) {\n      // null means \"all paths\"\n      pathMatcher = function matchAll(domainIndex) {\n        for (const curPath in domainIndex) {\n          const pathIndex = domainIndex[curPath];\n          for (const key in pathIndex) {\n            results.push(pathIndex[key]);\n          }\n        }\n      };\n    } else {\n      pathMatcher = function matchRFC(domainIndex) {\n        //NOTE: we should use path-match algorithm from S5.1.4 here\n        //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n        Object.keys(domainIndex).forEach(cookiePath => {\n          if (pathMatch(path, cookiePath)) {\n            const pathIndex = domainIndex[cookiePath];\n            for (const key in pathIndex) {\n              results.push(pathIndex[key]);\n            }\n          }\n        });\n      };\n    }\n    const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n    const idx = this.idx;\n    domains.forEach(curDomain => {\n      const domainIndex = idx[curDomain];\n      if (!domainIndex) {\n        return;\n      }\n      pathMatcher(domainIndex);\n    });\n    cb(null, results);\n  }\n  putCookie(cookie, cb) {\n    if (!this.idx[cookie.domain]) {\n      this.idx[cookie.domain] = {};\n    }\n    if (!this.idx[cookie.domain][cookie.path]) {\n      this.idx[cookie.domain][cookie.path] = {};\n    }\n    this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n    cb(null);\n  }\n  updateCookie(oldCookie, newCookie, cb) {\n    // updateCookie() may avoid updating cookies that are identical.  For example,\n    // lastAccessed may not be important to some stores and an equality\n    // comparison could exclude that field.\n    this.putCookie(newCookie, cb);\n  }\n  removeCookie(domain, path, key, cb) {\n    if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n      delete this.idx[domain][path][key];\n    }\n    cb(null);\n  }\n  removeCookies(domain, path, cb) {\n    if (this.idx[domain]) {\n      if (path) {\n        delete this.idx[domain][path];\n      } else {\n        delete this.idx[domain];\n      }\n    }\n    return cb(null);\n  }\n  removeAllCookies(cb) {\n    this.idx = {};\n    return cb(null);\n  }\n  getAllCookies(cb) {\n    const cookies = [];\n    const idx = this.idx;\n    const domains = Object.keys(idx);\n    domains.forEach(domain => {\n      const paths = Object.keys(idx[domain]);\n      paths.forEach(path => {\n        const keys = Object.keys(idx[domain][path]);\n        keys.forEach(key => {\n          if (key !== null) {\n            cookies.push(idx[domain][path][key]);\n          }\n        });\n      });\n    });\n\n    // Sort by creationIndex so deserializing retains the creation order.\n    // When implementing your own store, this SHOULD retain the order too\n    cookies.sort((a, b) => {\n      return (a.creationIndex || 0) - (b.creationIndex || 0);\n    });\n    cb(null, cookies);\n  }\n}\n[\"findCookie\", \"findCookies\", \"putCookie\", \"updateCookie\", \"removeCookie\", \"removeCookies\", \"removeAllCookies\", \"getAllCookies\"].forEach(name => {\n  MemoryCookieStore.prototype[name] = fromCallback(MemoryCookieStore.prototype[name]);\n});\nexports.MemoryCookieStore = MemoryCookieStore;\nfunction inspectFallback(val) {\n  const domains = Object.keys(val);\n  if (domains.length === 0) {\n    return \"{}\";\n  }\n  let result = \"{\\n\";\n  Object.keys(val).forEach((domain, i) => {\n    result += formatDomain(domain, val[domain]);\n    if (i < domains.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += \"}\";\n  return result;\n}\nfunction formatDomain(domainName, domainValue) {\n  const indent = \"  \";\n  let result = `${indent}'${domainName}': {\\n`;\n  Object.keys(domainValue).forEach((path, i, paths) => {\n    result += formatPath(path, domainValue[path]);\n    if (i < paths.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += `${indent}}`;\n  return result;\n}\nfunction formatPath(pathName, pathValue) {\n  const indent = \"    \";\n  let result = `${indent}'${pathName}': {\\n`;\n  Object.keys(pathValue).forEach((cookieName, i, cookieNames) => {\n    const cookie = pathValue[cookieName];\n    result += `      ${cookieName}: ${cookie.inspect()}`;\n    if (i < cookieNames.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += `${indent}}`;\n  return result;\n}\nexports.inspectFallback = inspectFallback;","map":{"version":3,"names":["fromCallback","require","Store","permuteDomain","pathMatch","getCustomInspectSymbol","getUtilInspect","MemoryCookieStore","constructor","synchronous","idx","customInspectSymbol","inspect","util","inspectFallback","findCookie","domain","path","key","cb","undefined","findCookies","allowSpecialUseDomain","results","pathMatcher","matchAll","domainIndex","curPath","pathIndex","push","matchRFC","Object","keys","forEach","cookiePath","domains","curDomain","putCookie","cookie","updateCookie","oldCookie","newCookie","removeCookie","removeCookies","removeAllCookies","getAllCookies","cookies","paths","sort","a","b","creationIndex","name","prototype","exports","val","length","result","i","formatDomain","domainName","domainValue","indent","formatPath","pathName","pathValue","cookieName","cookieNames"],"sources":["D:/pi-editor/node_modules/tough-cookie/lib/memstore.js"],"sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst { fromCallback } = require(\"universalify\");\nconst Store = require(\"./store\").Store;\nconst permuteDomain = require(\"./permuteDomain\").permuteDomain;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst { getCustomInspectSymbol, getUtilInspect } = require(\"./utilHelper\");\n\nclass MemoryCookieStore extends Store {\n  constructor() {\n    super();\n    this.synchronous = true;\n    this.idx = {};\n    const customInspectSymbol = getCustomInspectSymbol();\n    if (customInspectSymbol) {\n      this[customInspectSymbol] = this.inspect;\n    }\n  }\n\n  inspect() {\n    const util = { inspect: getUtilInspect(inspectFallback) };\n    return `{ idx: ${util.inspect(this.idx, false, 2)} }`;\n  }\n\n  findCookie(domain, path, key, cb) {\n    if (!this.idx[domain]) {\n      return cb(null, undefined);\n    }\n    if (!this.idx[domain][path]) {\n      return cb(null, undefined);\n    }\n    return cb(null, this.idx[domain][path][key] || null);\n  }\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    const results = [];\n    if (typeof allowSpecialUseDomain === \"function\") {\n      cb = allowSpecialUseDomain;\n      allowSpecialUseDomain = true;\n    }\n    if (!domain) {\n      return cb(null, []);\n    }\n\n    let pathMatcher;\n    if (!path) {\n      // null means \"all paths\"\n      pathMatcher = function matchAll(domainIndex) {\n        for (const curPath in domainIndex) {\n          const pathIndex = domainIndex[curPath];\n          for (const key in pathIndex) {\n            results.push(pathIndex[key]);\n          }\n        }\n      };\n    } else {\n      pathMatcher = function matchRFC(domainIndex) {\n        //NOTE: we should use path-match algorithm from S5.1.4 here\n        //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n        Object.keys(domainIndex).forEach(cookiePath => {\n          if (pathMatch(path, cookiePath)) {\n            const pathIndex = domainIndex[cookiePath];\n            for (const key in pathIndex) {\n              results.push(pathIndex[key]);\n            }\n          }\n        });\n      };\n    }\n\n    const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n    const idx = this.idx;\n    domains.forEach(curDomain => {\n      const domainIndex = idx[curDomain];\n      if (!domainIndex) {\n        return;\n      }\n      pathMatcher(domainIndex);\n    });\n\n    cb(null, results);\n  }\n\n  putCookie(cookie, cb) {\n    if (!this.idx[cookie.domain]) {\n      this.idx[cookie.domain] = {};\n    }\n    if (!this.idx[cookie.domain][cookie.path]) {\n      this.idx[cookie.domain][cookie.path] = {};\n    }\n    this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n    cb(null);\n  }\n  updateCookie(oldCookie, newCookie, cb) {\n    // updateCookie() may avoid updating cookies that are identical.  For example,\n    // lastAccessed may not be important to some stores and an equality\n    // comparison could exclude that field.\n    this.putCookie(newCookie, cb);\n  }\n  removeCookie(domain, path, key, cb) {\n    if (\n      this.idx[domain] &&\n      this.idx[domain][path] &&\n      this.idx[domain][path][key]\n    ) {\n      delete this.idx[domain][path][key];\n    }\n    cb(null);\n  }\n  removeCookies(domain, path, cb) {\n    if (this.idx[domain]) {\n      if (path) {\n        delete this.idx[domain][path];\n      } else {\n        delete this.idx[domain];\n      }\n    }\n    return cb(null);\n  }\n  removeAllCookies(cb) {\n    this.idx = {};\n    return cb(null);\n  }\n  getAllCookies(cb) {\n    const cookies = [];\n    const idx = this.idx;\n\n    const domains = Object.keys(idx);\n    domains.forEach(domain => {\n      const paths = Object.keys(idx[domain]);\n      paths.forEach(path => {\n        const keys = Object.keys(idx[domain][path]);\n        keys.forEach(key => {\n          if (key !== null) {\n            cookies.push(idx[domain][path][key]);\n          }\n        });\n      });\n    });\n\n    // Sort by creationIndex so deserializing retains the creation order.\n    // When implementing your own store, this SHOULD retain the order too\n    cookies.sort((a, b) => {\n      return (a.creationIndex || 0) - (b.creationIndex || 0);\n    });\n\n    cb(null, cookies);\n  }\n}\n\n[\n  \"findCookie\",\n  \"findCookies\",\n  \"putCookie\",\n  \"updateCookie\",\n  \"removeCookie\",\n  \"removeCookies\",\n  \"removeAllCookies\",\n  \"getAllCookies\"\n].forEach(name => {\n  MemoryCookieStore.prototype[name] = fromCallback(\n    MemoryCookieStore.prototype[name]\n  );\n});\n\nexports.MemoryCookieStore = MemoryCookieStore;\n\nfunction inspectFallback(val) {\n  const domains = Object.keys(val);\n  if (domains.length === 0) {\n    return \"{}\";\n  }\n  let result = \"{\\n\";\n  Object.keys(val).forEach((domain, i) => {\n    result += formatDomain(domain, val[domain]);\n    if (i < domains.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += \"}\";\n  return result;\n}\n\nfunction formatDomain(domainName, domainValue) {\n  const indent = \"  \";\n  let result = `${indent}'${domainName}': {\\n`;\n  Object.keys(domainValue).forEach((path, i, paths) => {\n    result += formatPath(path, domainValue[path]);\n    if (i < paths.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += `${indent}}`;\n  return result;\n}\n\nfunction formatPath(pathName, pathValue) {\n  const indent = \"    \";\n  let result = `${indent}'${pathName}': {\\n`;\n  Object.keys(pathValue).forEach((cookieName, i, cookieNames) => {\n    const cookie = pathValue[cookieName];\n    result += `      ${cookieName}: ${cookie.inspect()}`;\n    if (i < cookieNames.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += `${indent}}`;\n  return result;\n}\n\nexports.inspectFallback = inspectFallback;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}