{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst HTMLFormElement = require(\"./HTMLFormElement.js\");\nconst Blob = require(\"./Blob.js\");\nconst Function = require(\"./Function.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"FormData\";\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new TypeError(\"next() called on a value that is not an iterator prototype object\");\n      }\n      const {\n        target,\n        kind,\n        index\n      } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n      const pair = values[index];\n      internal.index = index + 1;\n      return utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormData Iterator\",\n    configurable: true\n  }\n});\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'FormData'.`);\n};\nexports.createDefaultIterator = (target, kind) => {\n  const iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: {\n      target,\n      kind,\n      index: 0\n    },\n    configurable: true\n  });\n  return iterator;\n};\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n  const ctor = globalObject[ctorRegistrySymbol][\"FormData\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor FormData is not installed on the passed global object\");\n  }\n  return Object.create(ctor.prototype);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\", \"Worker\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class FormData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = HTMLFormElement.convert(curArg, {\n            context: \"Failed to construct 'FormData': parameter 1\"\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'append' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].append(...args);\n    }\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'delete' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].get(...args));\n    }\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'getAll' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'has' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 3\"\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].set(...args);\n    }\n    keys() {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'keys' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(this, \"key\");\n    }\n    values() {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'values' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(this, \"value\");\n    }\n    entries() {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'entries' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(this, \"key+value\");\n    }\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'forEach' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n      }\n      callback = Function.convert(callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(FormData.prototype, {\n    append: {\n      enumerable: true\n    },\n    delete: {\n      enumerable: true\n    },\n    get: {\n      enumerable: true\n    },\n    getAll: {\n      enumerable: true\n    },\n    has: {\n      enumerable: true\n    },\n    set: {\n      enumerable: true\n    },\n    keys: {\n      enumerable: true\n    },\n    values: {\n      enumerable: true\n    },\n    entries: {\n      enumerable: true\n    },\n    forEach: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"FormData\",\n      configurable: true\n    },\n    [Symbol.iterator]: {\n      value: FormData.prototype.entries,\n      configurable: true,\n      writable: true\n    }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = FormData;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: FormData\n  });\n};\nconst Impl = require(\"../xhr/FormData-impl.js\");","map":{"version":3,"names":["conversions","require","utils","HTMLFormElement","Blob","Function","implSymbol","ctorRegistrySymbol","interfaceName","IteratorPrototype","Object","create","next","value","internal","iterInternalSymbol","TypeError","target","kind","index","values","Array","from","len","length","undefined","done","pair","iteratorResult","map","tryWrapperForImpl","writable","enumerable","configurable","Symbol","toStringTag","exports","is","isObject","hasOwn","Impl","implementation","isImpl","convert","context","arguments","implForWrapper","createDefaultIterator","iterator","defineProperty","makeWrapper","globalObject","Error","ctor","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","FormData","constructor","args","curArg","push","append","name","esValue","delete","get","getAll","set","keys","entries","forEach","callback","thisArg","pairs","i","key","call","defineProperties"],"sources":["D:/pi-editor/node_modules/jsdom/lib/jsdom/living/generated/FormData.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst HTMLFormElement = require(\"./HTMLFormElement.js\");\nconst Blob = require(\"./Blob.js\");\nconst Function = require(\"./Function.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"FormData\";\n\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new TypeError(\"next() called on a value that is not an iterator prototype object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined, done: true };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormData Iterator\",\n    configurable: true\n  }\n});\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'FormData'.`);\n};\n\nexports.createDefaultIterator = (target, kind) => {\n  const iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"FormData\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor FormData is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class FormData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = HTMLFormElement.convert(curArg, { context: \"Failed to construct 'FormData': parameter 1\" });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'append' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].append(...args);\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'delete' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'delete' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'get' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'get' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].get(...args));\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'getAll' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'getAll' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'has' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'has' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"'set' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 3\"\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].set(...args);\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'keys' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'values' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'entries' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new TypeError(\"'forEach' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n      }\n      callback = Function.convert(callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(FormData.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"FormData\", configurable: true },\n    [Symbol.iterator]: { value: FormData.prototype.entries, configurable: true, writable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = FormData;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: FormData\n  });\n};\n\nconst Impl = require(\"../xhr/FormData-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}